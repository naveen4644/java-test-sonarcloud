name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectName="${GITHUB_REPOSITORY}"
      # - name: Get Quality Gate status
      #   id: check_quality_gate
      #   run: |
      #     curl -u ${{ secrets.SONAR_TOKEN }}: -G --data-urlencode "projectKey=java-sonarcloud1_java" ${{ secrets.SONAR_HOST }}/api/qualitygates/project_status > result.json

      # - name: Parse Quality Gate status
      #   id: parse_quality_gate
      #   run: |
      #     jq -r '.projectStatus.status' result.json

      # - name: Fail build if Quality Gate status is not "OK"
      #   if: ${{ steps.parse_quality_gate.outputs.status != 'OK' && steps.parse_quality_gate.outputs.status != 'WARN' }}
      #   run: exit 1